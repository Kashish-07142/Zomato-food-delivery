DDL Scripts

create schema food_delivery;
SET search_path TO food_delivery;

CREATE TABLE Customer (
    Customer_ID VARCHAR(10) PRIMARY KEY,
    Name CHAR(20),
    Device_Count INT,
    Phone_Number VARCHAR(15),
    Date_of_Registration DATE,
    Email VARCHAR(20)
);
CREATE TABLE Customer_Payment (
    Customer_ID VARCHAR(10),
    Saved_Payment_Method CHAR(20),
    PRIMARY KEY (Customer_ID, Saved_Payment_Method),
    FOREIGN KEY (Customer_ID) REFERENCES Customer(Customer_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Menu (
    Item_ID VARCHAR(10) PRIMARY KEY,
    Item_Name CHAR(50),
    Price INT,
    Description CHAR(70),
    Course CHAR(50),
    Type CHAR(30)
);

CREATE TABLE Restaurants (
    Restaurant_ID VARCHAR(20) PRIMARY KEY,
    Name CHAR(40),
    Type CHAR(20),
    Avg_Price INT,
    Ratings INT,
    Contact_No VARCHAR(15),
    Sponsored CHAR(20),
    Email VARCHAR(30),
    City CHAR(30),
    Street CHAR(30),
    Availability CHAR(20),
    PIN INT
);

CREATE TABLE Premium (
    ID VARCHAR(20) PRIMARY KEY,
    Start_Date DATE,
    End_Date DATE,
    Amount INT,
    C_ID VARCHAR(10),
    FOREIGN KEY (C_ID) REFERENCES Customer(Customer_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Cart (
    Cart_ID VARCHAR(10) PRIMARY KEY,
    Item_ID VARCHAR(10),
    Restaurant_ID VARCHAR(10),
    Cust_ID VARCHAR(10),
    FOREIGN KEY (Item_ID) REFERENCES Menu(Item_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Cust_ID) REFERENCES Customer(Customer_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Cart_Items (
    Cart_ID VARCHAR(10),
    Restaurant_ID VARCHAR(20),
    Item_ID VARCHAR(20),
    Quantity INT,
    PRIMARY KEY (Cart_ID, Item_ID, Restaurant_ID),
    FOREIGN KEY (Cart_ID) REFERENCES Cart(Cart_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Item_ID) REFERENCES Menu(Item_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE Orders (
    Order_ID VARCHAR(20) PRIMARY KEY,
    Status CHAR(20),
    Time TIMESTAMP,
    Date DATE,
    Rating INT,
    Cust_ID VARCHAR(10),
    Cart_ID VARCHAR(20),
    FOREIGN KEY (Cust_ID) REFERENCES Customer(Customer_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Cart_ID) REFERENCES Cart(Cart_ID)
        ON UPDATE CASCADE ON DELETE SET NULL
);


CREATE TABLE Customer_Address (
    Receiver_Name CHAR(20),
    Receiver_Contact_Number VARCHAR(15),
    PIN INT,
    City CHAR(20),
    Street CHAR(20),
    Cu_ID VARCHAR(10),
    PRIMARY KEY(Receiver_Name, Receiver_Contact_Number, PIN, City, Street),
    FOREIGN KEY (Cu_ID) REFERENCES Customer(Customer_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Disputes (
    Issue_ID VARCHAR(10) PRIMARY KEY,
    Refund INT,
    O_ID VARCHAR(20),
    Date DATE,
    FOREIGN KEY (O_ID) REFERENCES Orders(Order_ID)
        ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Invoice (
    Transaction_ID VARCHAR(20) PRIMARY KEY,
    Payment_Method CHAR(20),
    Inv_Date DATE,
    OID VARCHAR(20),
    Prem_ID VARCHAR(20),
    Time TIME,
    FOREIGN KEY (OID) REFERENCES Orders(Order_ID)
        ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY (Prem_ID) REFERENCES Premium(ID)
        ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Delivery_Partner (
    Partner_ID VARCHAR(10) PRIMARY KEY,
    Name CHAR(20),
    Vehicle CHAR(20),
    Contact_Number VARCHAR(15),
    Ratings INT,
    OrderID VARCHAR(20),
    FOREIGN KEY (OrderID) REFERENCES Orders(Order_ID)
        ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Restaurant_Menu (
    Restaurant_ID VARCHAR(20),
    Item_ID VARCHAR(20),
    Discount INT,
    PRIMARY KEY (Restaurant_ID, Item_ID),
    FOREIGN KEY (Restaurant_ID) REFERENCES Restaurants(Restaurant_ID)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (Item_ID) REFERENCES Menu(Item_ID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

